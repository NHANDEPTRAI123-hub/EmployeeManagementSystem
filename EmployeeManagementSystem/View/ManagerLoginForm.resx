<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>