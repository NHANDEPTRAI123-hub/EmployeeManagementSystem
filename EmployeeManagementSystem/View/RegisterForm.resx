<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>